CREATE TABLE ALUNO (
CODIGOALUNO int NOT NULL,
NOME varchar(90) NOT NULL,
SEXO char(1) NOT NULL,
DTNASCIMENTO date NOT NULL,
EMAIL varchar(30) NULL,
CONSTRAINT ALUNO_pk PRIMARY KEY (CODIGOALUNO));
INSERT INTO ALUNO (CODIGOALUNO, NOME, SEXO, DTNASCIMENTO,EMAIL) VALUES (1,'JOSÉ FRANCISCO
TERRA','M','28/10/1989','JFT@GMAIL.COM');
INSERT INTO ALUNO (CODIGOALUNO, NOME, SEXO, DTNASCIMENTO,EMAIL) VALUES (2,'ANDREY COSTA
FILHO','M','20/10/1999','ANDREYCF@HOTMAIL.COM');
INSERT INTO ALUNO (CODIGOALUNO, NOME, SEXO, DTNASCIMENTO,EMAIL) VALUES (3,'PATRÍCIA TORRES LOUREIRO','F','20/10/1980',
'PTORRES@GMAIL.COM');
INSERT INTO ALUNO (CODIGOALUNO, NOME, SEXO, DTNASCIMENTO,EMAIL) VALUES (4,'CARLA MARIA MACIEL','F','20/11/1996',NULL);
INSERT INTO ALUNO (CODIGOALUNO, NOME, SEXO, DTNASCIMENTO,EMAIL) VALUES (5,'LEILA SANTANA COSTA','F','20/11/2001',NULL);Consulta 01
SELECT * FROM ALUNO;



/* Consulta 01 Exibir todas as informações dos alunos.*/
SELECT * FROM ALUNO;

/* Retornar o código, o nome e a data de nascimento de todos os alunos. */
SELECT CODIGOALUNO, NOME, DTNASCIMENTO
FROM ALUNO;

/*Consulta 02 pode ser reescrita conforme a seguir:*/ 
SELECT CODIGOALUNO AS "Matrícula",
NOME AS "Nome do discente",
DTNASCIMENTO AS "Data de nascimento"
FROM ALUNO;

 /*Comando para remover a tabela ALUNO */
DROP TABLE ALUNO; DROP TABLE <NOMETABELA>;

/* sintaxe básica do comando ALTER TABLE: */ 
ALTER TABLE <NOMETABELA> ADD <COLUNA><TIPODEDADOS> ;


/* Comando para alterar a tabela CURSO, adicionando coluna DTRECONH */
ALTER TABLE CURSO ADD DTRECONH DATE;

/*Comando para alterar a tabela CURSO, removendo a coluna DTRECONH */ 
ALTER TABLE ALUNO DROP DTRECONH ;

/* Remover uma coluna da Tabela */ 
ALTER TABLE <NOMETABELA> DROP <COLUNA> ;

/* Exemplo */ 
CREATE TABLE NOMETABELA (
COLUNA1 - TIPODEDADOS [RESTRIÇÃO],
COLUNAN - TIPODEDADOS [RESTRIÇÃO],
PRIMARY KEY (COLUNA),
FOREIGN KEY (COLUNA) REFERENCES NOMETABELA (COLUNA)
CONSTRAINT RESTRIÇÃO);

/* NOMETABELA
representa o nome da tabela que será criada

COLUNA1 e COLUNAN
representa a(s) coluna(s) da tabela

TIPODEDADOS
indica tipo de dados ou domínio da coluna

RESTRIÇÃO
aponta alguma propriedade associada à coluna em questão. Por exemplo, podemos definir se a coluna é obrigatória ou opcional

PRIMARY KEY
indica a coluna, ou conjunto de colunas, representativa da chave primária

FOREIGN KEY
sinaliza a coluna, ou conjunto de colunas, com restrição de chave estrangeira

CONSTRAINT RESTRIÇÃO
indica alguma restrição que poderá ser declarada */ 

/* Comando para remover a tabela NIVEL - remoção em cascata */ 
DROP TABLE ALUNO CASCADE;

/* Sintaxe de inserção de linhas em tabela */ 
INSERT INTO <NOMETABELA> (COLUNA1, COLUNA2,…,COLUNAn) VALUES (VALOR1, VALOR2,…,VALORn);

/* sintaxe básica do comando UPDATE da SQL*/ 
UPDATE <NOMETABELA>
SET COLUNA1=VALOR1, COLUNA2=VALOR2,…,COLUNAn=VALORn
WHERE <CONDIÇÃO>;

/* Remoção de Linhas */
DELETE FROM <NOMETABELA>
WHERE <CONDIÇÃO>;

/* sintaxe básica para o comando SELECT */
SELECT COLUNA1 [[AS] APELIDOCOLUNA1],
COLUNA2 [[AS] APELIDOCOLUNA2],
…
COLUNAN [[AS] APELIDOCOLUNAN]
FROM TABELA;

/* Calculando idade e faixa etária */
SELECT NOME, DTNASCIMENTO, AGE (DTNASCIMENTO) AS "IDADE [ANO/MêS/DIA]",
extract(YEAR FROM AGE(DTNASCIMENTO)) AS "IDADE DO ALUNO" FROM ALUNO;

/*Exibir o nome, a idade e a faixa etária dos alunos */
SELECT NOME, extract (YEAR FROM AGE (DTNASCIMENTO)) AS "Idade do Aluno",
    CASE WHEN extract (YEAR FROM AGE (DTNASCIMENTO)) <=20 THEN '1. até 20 anos'
        WHEN extract (YEAR FROM AGE (DTNASCIMENTO)) BETWEEN 21 AND 30 THEN '2. 21 a 30 anos'
         WHEN extract (YEAR FROM AGE (DTNASCIMENTO)) BETWEEN 31 AND 40 THEN '3. 31 a 40 anos'
        WHEN extract (YEAR FROM AGE (DTNASCIMENTO)) BETWEEN 41 AND 50 THEN '4. 41 a 50 anos'
          WHEN extract (YEAR FROM AGE (DTNASCIMENTO)) BETWEEN 51 AND 60 THEN '5. 51 a 60 anos'
        WHEN extract (YEAR FROM AGE (DTNASCIMENTO)) > 60 THEN '6. mais de 60 anos'
        END AS "Faixa Etária"   FROM ALUNO;

/* Função	      -                   O que retorna?
COUNT(*)	-           número de linhas da consulta
MIN(COLUNA/EXPRESSÃO)  - 	menor de uma coluna ou expressão
AVG(COLUNA/EXPRESSÃO)   -	valor médio da coluna ou expressão
MAX(COLUNA/EXPRESSÃO)   -	  maior valor de uma coluna ou expressão
SUM(COLUNA/EXPRESSÃO)   -	soma dos valores de uma coluna ou expressão
STDDEV(COLUNA/EXPRESSÃO)    -	desvio padrão dos valores de uma coluna ou expressão
VARIANCE(COLUNA/EXPRESSÃO)  -	variância dos valores de uma coluna ou expressão */ 

/* usando somente o comando SELECT/FROM retorna q quantidade total */ 
SELECT  
    COUNT(*) AS "Número de alunos",
    MIN(extract(YEAR FROM AGE (DTNASCIMENTO))) AS "Menor Idade",
    AVG(extract(YEAR FROM AGE (DTNASCIMENTO))) AS "Idade Média",
    MAX(extract(YEAR FROM AGE (DTNASCIMENTO))) AS "Maior Idade",
    SUM(extract(YEAR FROM AGE (DTNASCIMENTO))) AS "Idade Média",
FROM ALUNO;

/* CURSO */
SELECT COUNT(*) NCURSOS FROM CURSO;
/* DISCIPLINA */
SELECT COUNT(*) NDISCIPINAS FROM DISCIPLINA;
/* ALUNO */
SELECT COUNT(*) NALUNOS FROM ALUNO;
/* Consulta de resultados em apenas uma linha */ 
SELECT  
    (SELECT COUNT(*) NCURSOS FROM CURSO),
    (SELECT COUNT(*) NALUNOS FROM ALUNO),
    (SELECT COUNT(*) NDISCIPLINAS FROM DISCIPLINA);

/* Criando tabela a partir de consulta */
CREATE  TABLE TTESTE AS SELECT NOME, extract(YEAR FROM AGE(DTNASCIMENTO)) AS "Idade do Aluno",
    CASE WHEN extract (YEAR FROM AGE (DTNASCIMENTO)) <=20 THEN '1. até 20 anos'
        WHEN extract (YEAR FROM AGE (DTNASCIMENTO)) BETWEEN 21 AND 30 THEN '2. 21 a 30 anos'
         WHEN extract (YEAR FROM AGE (DTNASCIMENTO)) BETWEEN 31 AND 40 THEN '3. 31 a 40 anos'
        WHEN extract (YEAR FROM AGE (DTNASCIMENTO)) BETWEEN 41 AND 50 THEN '4. 41 a 50 anos'
          WHEN extract (YEAR FROM AGE (DTNASCIMENTO)) BETWEEN 51 AND 60 THEN '5. 51 a 60 anos'
        WHEN extract (YEAR FROM AGE (DTNASCIMENTO)) > 60 THEN '6. mais de 60 anos'
        END AS "Faixa Etária"   FROM ALUNO;

/* Criando view a partir de consulta comando CREATE VIEW <CONSULTA> */ 
CREATE VIEW VTESTE AS SELECT NOME, extract(YEAR FROM AGE(DTNASCIMENTO)) AS "Idade do Aluno", 
CASE WHEN extract (YEAR FROM AGE (DTNASCIMENTO)) <=20 THEN '1. até 20 anos'
        WHEN extract (YEAR FROM AGE (DTNASCIMENTO)) BETWEEN 21 AND 30 THEN '2. 21 a 30 anos'
        WHEN extract (YEAR FROM AGE (DTNASCIMENTO)) BETWEEN 31 AND 40 THEN '3. 31 a 40 anos'
        WHEN extract (YEAR FROM AGE (DTNASCIMENTO)) BETWEEN 41 AND 50 THEN '4. 41 a 50 anos'
        WHEN extract (YEAR FROM AGE (DTNASCIMENTO)) BETWEEN 51 AND 60 THEN '5. 51 a 60 anos'
        WHEN extract (YEAR FROM AGE (DTNASCIMENTO)) > 60 THEN '6. mais de 60 anos'
        END AS "Faixa Etária"   FROM ALUNO;

/* Sintaxe básica para o comando SELECT, com o uso das cláusulas WHERE e ORDER BY */ 
SELECT COLUNA1 [[AS] APELIDOCOLUNA1],
COLUNA2 [[AS] APELIDOCOLUNA2],
…
COLUNAN [[AS] APELIDOCOLUNAN]
FROM TABELA
WHERE <CONDIÇÃO>
ORDER BY EXPRESSÃO1[ASC|DESC] [NULLS {FIRST|LAST}], [EXPRESSÃO2[ASC|DESC] [NULLS {FIRST|LAST}…];

/* Operador	Significado
AND	conjunção
OR	disjunção
NOT	negação */ 

/* Operador	Significado
<	menor
<=	menor ou igual a
>	maior
>=	maior ou igual a
=	igual
<> ou !=	> diferente*/ 

/*Nome e a data de nascimento das professoras */
SELECT NOME, DTNASCIMENTO FROM ALUNO WHERE SEXO='F';

/* Nome e a data de nascimento das professoras que fazem aniversário em novembro.*/ 
SELECT NOME, DTNASCIMENTO FROM ALUNO WHERE SEXO='F' 
AND extract (MONTH FROM DTNASCIMENTO=11);

/*Nome dos alunos que fazem aniversário no segundo semestre com Operador IN*/ 
SELECT NOME, DTNASCIMENTO from ALUNO, 
WHERE extract (MONTH FROM DTNASCIMENTO) IN (7,8,9,10,11,12);

/*Nome dos alunos nascidos entre 1985 e 2005 Utilizando o BETWEEN */ 
SELECT NOME, DTNASCIMENTO from ALUNO, 
WHERE extract (YEAR FROM DTNASCIMENTO) BETWEEN 1985 AND 2005;

/* Nome dos alunos que possuem a string COSTA em qualquer parte do nome com o comando LIKE*/ 
SELECT NOME FROM ALUNO WHERE NOME LIKE '%COSTA%';

/*Mome dos alunos que possuem a letra “A” na segunda posição do nome LIKE*/
SELECT NOME FROM ALUNO WHERE NOME LIKE '%_A%';

/*Nome e a data de nascimento dos alunos que não possuem a string “MARIA” fazendo parte do nome NOT LIKE*/
SELECT NOME FROM ALUNO WHERE NOME NOT LIKE '%MARIA%';

/*Alunos QUE possuem conta de e-mail no gmail*/
SELECT COUNT(*) AS quantidade FROM ALUNO WHERE EMAIL LIKE '%@GMAIL.%';

/*Nome, data de nascimento e o e-mail dos alunos que têm endereço eletrônico cadastrado operador NULL*/
SELECT NOME, DTNASCIMENTO, EMAIL FROM ALUNO WHERE E-MAIL IS NOT NUL;

/*Nome dos alunos sem e-mail cadastrado no banco de dados NULL*/ 
SELECT NOME FROM ALUNO WHERE E-MAIL IS NULL;

/*Nome e a data de nascimento dos alunos, ordenando os resultados por nome, de maneira ascendente ORDER BY*/
SELECT NOME, DTNASCIMENTO FROM ALUNO ORDER BY NOME;

/*Nome e a data de nascimento dos alunos, ordenando os resultados de modo ascendente pelo mês de nascimento e, em seguida, pelo nome, também de modo ascendente ORDER BY*/
SELECT NOME, DTNASCIMENTO FROM ALUNO ORDER BY extract (month FROM DTNASCIMENTO), NOME; 

























