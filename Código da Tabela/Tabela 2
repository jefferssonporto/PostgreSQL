Create Table DEPARTAMENTO ( 
	CODIGODEPARTAMENTO int NOT NULL,
	NOME varchar(90) NOT NULL,
	CONSTRAINT DEPARTAMENTO_pk PRIMARY KEY (CODIGODEPARTAMENTO));
Create table FUNCIONARIO (
	CODIGOFUNCIONARIO int NOT NULL,
	NOME varchar(90) NOT NULL,
	CPF char(15) NULL,
	SEXO char(1) NOT NULL, 
	DTNASCIMENTO date NOT NULL,
	SALARIO real NULL,
	CODIGODEPARTAMENTO int NULL,
	CONSTRAINT FUNCIONARIO_pk PRIMARY KEY (CODIGOFUNCIONARIO));
ALTER TABLE FUNCIONARIO ADD CONSTRAINT FUNCIONARIO_DEPARTAMENTO
	FOREIGN KEY (CODIGODEPARTAMENTO) REFERENCES DEPARTAMENTO (CODIGODEPARTAMENTO);
INSERT INTO DEPARTAMENTO(CODIGODEPARTAMENTO,NOME) VALUES (1,'TECNOLOGIA DA INFORMAÇÃO');
INSERT INTO DEPARTAMENTO(CODIGODEPARTAMENTO,NOME) VALUES (2,'CONTABILIDADE');
INSERT INTO DEPARTAMENTO(CODIGODEPARTAMENTO,NOME) VALUES (3,'MARKETING');
INSERT INTO FUNCIONARIO(CODIGOFUNCIONARIO,NOME, CPF, SEXO, DTNASCIMENTO, SALARIO, CODIGODEPARTAMENTO)
	VALUES (1, 'ROBERTA DA SILVA BRASIL', NULL, 'F', '20/12/1980', 7000, 1);
INSERT INTO FUNCIONARIO(CODIGOFUNCIONARIO,NOME, CPF, SEXO, DTNASCIMENTO, SALARIO, CODIGODEPARTAMENTO)
	VALUES (2, 'MARIA SILVA BRASIL', NULL, 'F', '20/09/1988', 9500,2 );
INSERT INTO FUNCIONARIO(CODIGOFUNCIONARIO,NOME, CPF, SEXO, DTNASCIMENTO, SALARIO, CODIGODEPARTAMENTO)
	VALUES (3, 'GABRIELLA PEREIRA LIMA', NULL, 'F', '20/02/1990',6000 ,1);
INSERT INTO FUNCIONARIO(CODIGOFUNCIONARIO,NOME, CPF, SEXO, DTNASCIMENTO, SALARIO, CODIGODEPARTAMENTO)
	VALUES (4, 'MARCOS PEREIRA BRASIL', NULL, 'M', '20/02/1999',6000,2);
INSERT INTO FUNCIONARIO(CODIGOFUNCIONARIO,NOME, CPF, SEXO, DTNASCIMENTO, SALARIO, CODIGODEPARTAMENTO)
	VALUES (5, 'HEMERSON DA SILVA BRASIL', NULL, 'M', '20/12/1992', 7000,NULL);


    /* Consultas as Tabelas separadamente */ 
    TABLE FUNCIONARIO; (equivalente a SELECT * FROM FUNCIONARIO;)
    SELECT * FROM DEPARTAMENTO;

/*Retornar o código e o nome do(s) funcionário(s) que ganha(m) o maior salário.*/
    SELECT CODIGOFUNCIONARIO, NOME
    FROM FUNCIONARIO WHERE SALARIO = (SELECT MAX (SALARIO)) FROM FUNCIONARIO;

/* Retornar o código, o nome e o salário do(s) funcionário(s) que ganha(m) mais que a média salarial dos colaboradores.*/
    SELECT CODIGOFUNCIONARIO, NOME, SALARIO
    FROM FUNCIONARIO WHERE SALARIO > (SELECT AVG (SALARIO)) FROM FUNCIONARIO;

/*Retornar o código, o nome e o salário do(s) funcionário(s) que ganha(m) menos que a média salarial dos colaboradores do departamento de Tecnologia da Informação.*/
 SELECT CODIGOFUNCIONARIO, NOME, SALARIO
    FROM FUNCIONARIO WHERE SALARIO < (SELECT AVG (SALARIO) FROM FUNCIONARIO;
    WHERE CODIGODEPARTAMENTO IN (SELECT CODIGODEPARTAMENTO FROM DEPARTAMENTO WHERE NOME = 'TECNOLOGIA DA INFORMAÇÃO'));

/*trocar uma subconsulta por uma junção*/ 
SELECT CODIGOFUNCIONARIO, NOME, SALARIO
    FROM FUNCIONARIO WHERE SALARIO < (SELECT AVG (SALARIO) FROM FUNCIONARIO F JOIN DEPARTAMENTO D ON
    (F.CODIGODEPARTAMENTO=D.CODIGODEPARTAMENTO) WHERE D.NOME='TECNOLOGIA DA INFORMAÇÃO');

    /* FUNCIONARIOS QUE RECEBEM MAIOR SALARIO DO SEXO FEMININO*/
    SELECT COUNT (*) AS QUANTIDADE FROM FUNCIONARIO WHERE SALARIO <
    (SELECT MAX (SALARIO) FROM FUNCIONARIO WHERE SEXO='F');

/* Retornar o código, o nome e o salário do(s) funcionário(s) que ganha(m) mais que a média salarial dos colaboradores do departamento ao qual pertencem.*/
SELECT CODIGOFUNCIONARIO, NOME, SALARIO
    FROM FUNCIONARIO F WHERE SALARIO > (SELECT AVG (SALARIO) FROM FUNCIONARIO;
    WHERE CODIGODEPARTAMENTO=F. CODIGODEPARTAMENTO);

    /* Outra forma para obter o resultado anterior*/
    SELECT CODIGOFUNCIONARIO, NOME, SALARIO
    FROM FUNCIONARIO F join (SELECT CODIGODEPARTAMENTO, AVG (SALARIO) AS MEDIA FROM FUNCIONARIO;
    GROUP BY CODIGODEPARTAMENTO ) TESTE ON F.CODIGODEPARTAMENTO=TESTE.CODIGODEPARTAMENTO
    WHERE SALARIO>MEDIA;

    /*equiparar os salários dos funcionários que atuam no mesmo departamento*/ 
    UPDATE FUNCIONARIO F SET SALARIO= (SELECT MAX(SALARIO) FROM FUNCIONARIO)
    WHERE CODIGODEPARTAMENTO=F.CODIGODEPARTAMENTO WHERE F.CODIGODEPARTAMENTO IS NOT NULL,

    /*exibir o código e o nome do departamento onde há pelo menos um funcionário alocado.*/
    SELECT D.CODIGODEPARTAMENTO, D.NOME FROM DEPARTAMENTO D WHERE EXISTS 
    (SELECT  F.CODIGODEPARTAMENTO FROM FUNCIONARIO F WHERE D.CODIGODEPARTAMENTO=F.CODIGODEPARTAMENTO);

    /*saber se há departamento sem ocorrência de colaborador alocado utilizando o NOT*/
     SELECT D.CODIGODEPARTAMENTO, D.NOME FROM DEPARTAMENTO D WHERE NOT EXISTS 
    (SELECT  F.CODIGODEPARTAMENTO FROM FUNCIONARIO F WHERE D.CODIGODEPARTAMENTO=F.CODIGODEPARTAMENTO);

    /*exibir todo o seu conteúdo da tabela FUNCIONÁRIO*/ 
    SELECT * FROM FUNCIONARIO;

    /* exibir grupo da Tabela cláusula DISTINCT ao comando SELECT*/ 
    SELECt DISTINCT sexo from FUNCIONARIO; 

    /*GROUP BY serve para exibir resultados de consulta de acordo com um grupo especificado*/
    SELECT SEXO FROM FUNCIONARIO GROUP BY SEXO; 

    /* Retornar o número de funcionários por sexo*/
    SELECT SEXO, COUNT(*) AS QUANTIDADE FROM FUNCIONARIO 
    GROUP BY SEXO;

    /*exibir os resultados da consulta anterior em uma única linha*/
    SELECT (SELECT COUNT(*) AS "M" FROM FUNCIONARIO WHERE SEXO='M'),
            (SELECT COUNT(*) AS "F" FROM FUNCIONARIO WHERE SEXO='F');

/*Retornar a média salarial por sexo.*/
SELECT SEXO, AVG (SALARIO) AS MEDIASALARIAL FROM FUNCIONARIO
GROUP BY SEXO;

/*Ordenado por mês de aniversário*/
SELECT EXTRACT (MONTH FROM DTNASCIMENTO) AS MES,
COUNT(*) AS QUANTIDADE, MIN(SALARIO) AS MENORSALARIO,
ROUND (AVG(SALARIO)::NUMERIC, 0) AS SALARIOMEDIO,
MAX(SALARIO) AS MAIOR SALARIO FROM FUNCIONARIO
GROUP BY EXTRACT(MONTH FROM DTNASCIMENTO)
ORDER BY EXTRACT(MONTH FROM DTNASCIMENTO);

/* Retornar, por mês de aniversário, o mês, o sexo e a quantidade de colaboradores.
Apresentar os resultados ordenados pelo mês.*/
SELECT EXTRACT (MONTH FROM DTNASCIMENTO) AS MES, SEXO
COUNT(*) AS QUANTIDADE,
GROUP BY EXTRACT(MONTH FROM DTNASCIMENTO), SEXO
ORDER BY EXTRACT(MONTH FROM DTNASCIMENTO);

/*Suponha que o departamento de recursos humanos esteja estudando a viabilidade de oferecer bônus de 5% aos funcionários por mês de nascimento, mas limitado somente aos casos onde há mais de um colaborador aniversariando. Assim, para cada mês em questão, deseja-se listar o mês, o número de colaboradores e o valor do bônus.*/
SELECT EXTRACT (MONTH FROM DTNASCIMENTO) AS MES, COUNT(*) AS QUANTIDADE,
SUM(SALARIO*0.05) AS TOTALBONUS FROM FUNCIONARIO
GORUP BY EXTRACT (MONTH FROM DTNASCIMENTO) HAVING COUNT (*) >1
ORDER BY EXTRACT(MONTH FROM DTNASCIMENTO;)